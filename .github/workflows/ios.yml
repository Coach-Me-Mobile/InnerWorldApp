name: iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_to_testflight:
        description: 'Verify TestFlight Readiness'
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build iOS App
    runs-on: macos-14
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'
      
      - name: Build
        run: |
          cd ios
          xcodebuild \
            -project InnerWorld.xcodeproj \
            -scheme InnerWorld \
            -destination "generic/platform=iOS" \
            -configuration Debug \
            CODE_SIGNING_ALLOWED=NO \
            build

  verify-testflight-ready:
    name: Verify TestFlight Readiness
    runs-on: macos-14
    needs: build
    if: github.ref == 'refs/heads/main' || github.event.inputs.deploy_to_testflight == 'true'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'
      
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Check verification trigger
        run: |
          if [ "${{ github.event.inputs.deploy_to_testflight }}" == "true" ]; then
            echo "🚀 Manual TestFlight readiness verification triggered"
          else
            echo "🔄 Automatic TestFlight readiness verification (main branch)"
          fi
      
      - name: Get Apple credentials
        run: |
          # Get Apple Team ID
          APPLE_SECRETS=$(aws secretsmanager get-secret-value \
            --secret-id "innerworld-prod/apple/signin-key" \
            --query SecretString --output text)
          APPLE_TEAM_ID=$(echo "$APPLE_SECRETS" | jq -r '.team_id')
          
          echo "🔍 Retrieved Apple Team ID: $APPLE_TEAM_ID"
          echo "APPLE_TEAM_ID=$APPLE_TEAM_ID" >> $GITHUB_ENV
          
          # Get App Store Connect API key
          ASC_SECRETS=$(aws secretsmanager get-secret-value \
            --secret-id "innerworld-prod/appstoreconnect/api-key" \
            --query SecretString --output text)
          
          ASC_KEY_ID=$(echo "$ASC_SECRETS" | jq -r '.key_id')
          ASC_ISSUER_ID=$(echo "$ASC_SECRETS" | jq -r '.issuer_id')
          
          echo "🔑 App Store Connect Key ID: $ASC_KEY_ID"
          echo "🏢 App Store Connect Issuer ID: $ASC_ISSUER_ID"
          
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$ASC_SECRETS" | jq -r '.private_key' > ~/.appstoreconnect/private_keys/AuthKey_${ASC_KEY_ID}.p8
          
          echo "ASC_KEY_ID=$ASC_KEY_ID" >> $GITHUB_ENV
          echo "ASC_ISSUER_ID=$ASC_ISSUER_ID" >> $GITHUB_ENV
      
      - name: Build verification for TestFlight readiness
        run: |
          cd ios
          
          # Build version info
          BUILD_NUMBER="${GITHUB_SHA:0:8}"
          VERSION_NUMBER="$(date '+%Y.%m.%d')"
          
          echo "📱 Building iOS app for verification..."
          echo "Team ID: $APPLE_TEAM_ID"
          echo "Build: $BUILD_NUMBER"
          echo "Version: $VERSION_NUMBER"
          
          # Build for verification (no code signing in CI)
          xcodebuild \
            -project InnerWorld.xcodeproj \
            -scheme InnerWorld \
            -destination "generic/platform=iOS" \
            -configuration Release \
            MARKETING_VERSION="$VERSION_NUMBER" \
            CURRENT_PROJECT_VERSION="$BUILD_NUMBER" \
            CODE_SIGNING_ALLOWED=NO \
            build
          
          echo "✅ iOS app builds successfully!"
          echo "📋 Build Summary:"
          echo "   Build Number: $BUILD_NUMBER"
          echo "   Version: $VERSION_NUMBER"
          echo "   Configuration: Release"
          echo ""
          echo "🚀 Ready for TestFlight:"
          echo "   To deploy to TestFlight, you'll need to set up code signing certificates."
          echo "   This build verification confirms your app compiles correctly."
